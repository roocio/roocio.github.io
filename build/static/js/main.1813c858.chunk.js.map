{"version":3,"sources":["assets/fonts/BebasNeue-Regular.ttf","assets/imgs/imgEmptyList.svg","assets/imgs/imgAllDone.svg","components/collectorThings/aimTrainer/aimTrainerSketch.js","components/header/about/AboutCard.js","components/header/about/AboutModal.js","components/header/Contact.js","helpers/useCollectorItemsReducer.js","components/header/HeaderCancelBtn.js","components/header/Header.js","components/collectorThings/todoList/AddTaskForm.js","components/collectorThings/todoList/AddTaskModal.js","components/collectorThings/todoList/EditTaskCard.js","components/collectorThings/todoList/TodoList.js","components/RenderOnSelect.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aimTrainerSketch","p","posX","posY","countDownInterval","targetsInterval","buttonStart","buttonStop","showScore","cnv","fontRegular","totalTargets","targetHit","totalHits","userHitsRecord","gameRunning","textBig","windowWidth","windowHeight","textMedium","mapWidth","mapHeight","windowResized","centerCanvas","resizeCanvas","position","width","loadMap","preload","loadFont","regularFont","setup","createCanvas","style","cursor","CROSS","loadHUD","frameRate","noLoop","msgDelivery","msg","size","responsiveText","hexColor","height","x","y","noStroke","fill","rect","createButton","mousePressed","countDown","stopGame","createSpan","bestScore","mouseButton","LEFT","clearInterval","resetScore","count","setInterval","startGame","gamePlayManager","targetManager","select","elt","textContent","leading","hits","redraw","hitInterval","textAlign","CENTER","textSize","textFont","textLeading","text","mouseX","mouseY","draw","circle","random","mapPosX","diameter","mapPosY","strokeWeight","stroke","AboutCard","Card","border","className","Img","src","Body","Title","Text","Row","xs","md","lg","Col","href","target","icon","faGithubAlt","faLinkedinIn","AboutModal","show","hide","Modal","onHide","aria-labelledby","centered","animation","Header","closeButton","id","sm","lassName","Contact","linkText","useState","setShow","setTarget","ref","useRef","onMouseEnter","onMouseLeave","OverlayTrigger","placement","onToggle","overlay","Tooltip","Nav","Link","onClick","event","useCollectorItemsReducer","useReducer","state","action","console","log","type","itemId","selectedItem","dispatchItemAction","selectedCollectorItem","selectCollectorItemAction","closeCollectorItemAction","HeaderCancelBtn","onCloseBtnClick","Button","variant","faWindowClose","color","marginLeft","onSelectBtnClick","selected","showModal","setShowModal","Navbar","collapseOnSelect","expand","fixed","Toggle","aria-controls","Collapse","NavDropdown","title","drop","Item","AddTaskForm","onSubmitValues","currentTaskName","children","yup","require","schema","object","shape","name","string","required","Date","datePicker","setDatePicker","maxDate","setMonth","getMonth","textInput","useEffect","current","focus","validationSchema","onSubmit","values","initialValues","handleSubmit","handleChange","handleBlur","errors","touched","isValid","Form","noValidate","Group","controlId","Label","Control","placeholder","value","onChange","isInvalid","Feedback","minDate","minDetail","calendarClassName","paddingLeft","paddingRight","AddTaskModal","onTaskAdd","deadline","Math","toString","substring","task","taskCreationDate","EditTaskCard","item","onTaskEdited","Accordion","as","eventKey","listReducer","ready","find","stateItem","Error","TodoList","list","dispatchList","handleEditTask","amount","completed","progressBarHandle","setProgressBarAmount","listTaskNotReady","listTaskReady","allTaskReady","firstTimeList","listControl","setListControl","length","newAmount","isCompleted","parseInt","handleProgressBar","faPlus","ProgressBar","now","label","span","offset","Image","imgEmptyList","fluid","imgAllDone","filter","map","i","overflow","key","toDateString","moment","hours","minutes","seconds","from","faCheckCircle","faEdit","ListGroup","backgroundColor","trigger","Popover","Content","RenderOnSelect","render","sketch","selectRender","Home","Container","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1813c858.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BebasNeue-Regular.21bb70b6.ttf\";","module.exports = __webpack_public_path__ + \"static/media/imgEmptyList.45589b88.svg\";","module.exports = __webpack_public_path__ + \"static/media/imgAllDone.838efb1e.svg\";","import regularFont from '../../../assets/fonts/BebasNeue-Regular.ttf'\n\nfunction aimTrainerSketch(p) {\n  /// Gameplay variables\n  let totalTargets = 0\n  let posX, posY\n  let diameter = 25\n  let targetHit = false\n  let totalHits = 0\n  let userHitsRecord = 0\n\n  /// Status of the game variables\n  let gameRunning = false\n  let countDownInterval\n  let targetsInterval\n  let countDownDone = false\n\n  // HUD and canvas\n  let buttonStart, buttonStop, buttonQuit, showScore\n  let cnv\n\n  /// Resource variables\n  let fontRegular\n  const textBig = (p.windowWidth + p.windowHeight) / 5\n  const textMedium = (p.windowWidth + p.windowHeight) / 9\n  const textSmall = 35\n  const mapPosX = 0\n  const mapPosY = 100\n  let mapWidth = p.windowWidth\n  let mapHeight = p.windowHeight - 250\n\n  p.windowResized = () => {\n    centerCanvas()\n    p.resizeCanvas(p.windowWidth - 100, p.windowHeight - 150)\n    mapWidth = p.windowWidth //130\n    mapHeight = p.windowHeight - 250\n    buttonStart.position(p.width - 170, 130)\n    buttonStop.position(p.width - 50, 130)\n    showScore.position(p.width - 290, 133)\n    loadMap()\n  }\n  p.preload = () => {\n    fontRegular = p.loadFont(regularFont)\n  }\n  p.setup = () => {\n    cnv = p.createCanvas(p.windowWidth - 100, p.windowHeight - 150)\n    cnv.style('display', 'block')\n    centerCanvas()\n    p.cursor(p.CROSS)\n    loadHUD()\n    loadMap()\n    p.frameRate(32)\n    p.noLoop()\n    msgDelivery({\n      msg: 'Ready',\n      size: responsiveText,\n      hexColor: '#FFFF6D',\n      posX: p.width / 2,\n      posY: p.height / 2,\n    })\n  }\n  const centerCanvas = () => {\n    let x = (p.windowWidth - p.width) / 2\n    let y = (p.windowHeight - p.height) / 2\n    cnv.position(x, y)\n  }\n  const loadMap = () => {\n    p.noStroke()\n    p.fill('#212121')\n    p.rect(mapPosX, mapPosY, mapWidth, mapHeight)\n  }\n\n  const responsiveText = () => {\n    if (mapWidth >= 675) {\n      return textBig\n    } else if (mapWidth <= 675 && mapWidth >= 350) {\n      return textMedium\n    } else {\n      return textSmall\n    }\n  }\n\n  const loadHUD = () => {\n    buttonStart = p.createButton('Play')\n    buttonStart.style('backgroundColor', '#FFFF6D')\n    buttonStart.style('color', '#212121')\n    buttonStart.style('border', 'none')\n    buttonStart.style('fontWeight', 'bold')\n    buttonStart.style('fontFamily', 'inherit')\n    buttonStart.style('fontSize', 'large')\n    buttonStart.style('width', '100px')\n    buttonStart.position(p.width - 170, 130)\n    buttonStart.mousePressed(countDown)\n\n    buttonStop = p.createButton('Stop')\n    buttonStop.style('backgroundColor', '#212121')\n    buttonStop.style('color', '#FCF8E3')\n    buttonStop.style('border', 'none')\n    buttonStop.style('fontWeight', 'bold')\n    buttonStop.style('fontFamily', 'inherit')\n    buttonStop.style('fontSize', 'large')\n    buttonStop.style('width', '100px')\n    buttonStop.position(p.width - 50, 130)\n    buttonStop.mousePressed(stopGame)\n\n    showScore = p.createSpan(`Your Best: ${bestScore(totalHits)}`)\n    showScore.style('color', '#FFFF6D')\n    showScore.style('fontFamily', 'inherit')\n    showScore.style('fontWeight', 'bold')\n    showScore.style('fontSize', 'large')\n    showScore.position(p.width - 70, 190)\n  }\n\n  const countDown = () => {\n    if (p.mouseButton === p.LEFT) {\n      countDownDone = false\n      gameRunning = false\n      clearInterval(targetsInterval)\n      clearInterval(countDownInterval)\n      resetScore()\n      loadMap()\n      while (gameRunning == false) {\n        let count = 4\n        countDownInterval = setInterval(() => {\n          count -= 1\n          // show countdown\n          if (count != 0) {\n            p.fill('#212121')\n            p.noStroke()\n            p.rect(mapPosX, mapPosY, mapWidth, mapHeight)\n            msgDelivery({\n              msg: count,\n              size: responsiveText,\n              hexColor: '#FFFF6D',\n              posX: p.width / 2,\n              posY: p.height / 2,\n            })\n          }\n          if (count <= 0) {\n            // stop interval and start the game after 3 seconds countdown\n            clearInterval(countDownInterval)\n            gameRunning = true\n            startGame()\n            countDownDone = true\n          }\n        }, 500)\n        gameRunning = true\n      }\n    }\n  }\n\n  ///\n  /// Stops current game\n  ///\n  const stopGame = () => {\n    if (p.mouseButton === p.LEFT) {\n      gameRunning = false\n      clearInterval(countDownInterval)\n      clearInterval(targetsInterval)\n      resetScore()\n      loadMap()\n      msgDelivery({\n        msg: 'Ready',\n        size: responsiveText,\n        hexColor: '#FFFF6D',\n        posX: p.width / 2,\n        posY: p.height / 2,\n      })\n    }\n  }\n\n  ///\n  /// Sets the total of targets to play\n  ///\n  const setTargetsToPlay = (amount) => {\n    totalTargets = amount\n  }\n  ///\n  /// Prepare the game to start. Retuns true if the game started\n  ///\n  const startGame = () => {\n    if (gameRunning == true) {\n      setTargetsToPlay(25)\n      gamePlayManager()\n      loadMap()\n      return true\n    } else {\n      loadMap()\n    }\n  }\n\n  const gamePlayManager = () => {\n    // interval for total gameplay\n    targetsInterval = setInterval(() => {\n      if (totalTargets >= 1) {\n        targetManager()\n      } else {\n        loadMap()\n        p.select('span').elt.textContent = `Your Best: ${bestScore(totalHits)}`\n        msgDelivery({\n          msg: `Hits: ${totalHits}`,\n          size: responsiveText,\n          hexColor: '#FFFF6D',\n          leading: 230,\n          posX: p.width / 2,\n          posY: p.height / 2,\n        })\n        gameRunning = false\n        resetScore()\n        clearInterval(targetsInterval)\n      }\n    }, 900) // velocity of each target to appear\n  }\n\n  ///\n  /// Define the best score the user done\n  ///\n  const bestScore = (hits) => {\n    if (hits >= userHitsRecord) {\n      userHitsRecord = hits\n      return hits\n    } else return userHitsRecord\n  }\n\n  ///\n  /// Reset score\n  ///\n  const resetScore = () => {\n    totalHits = 0\n  }\n\n  ///\n  /// Draw a target and manage if the target was hited\n  ///\n  const targetManager = () => {\n    p.redraw()\n    hitInterval()\n    if (totalTargets <= 0) {\n      gameRunning = false\n      resetScore()\n    }\n    totalTargets -= 1\n  }\n\n  ///\n  /// Time for user to try a hit between each target\n  ///\n  const hitInterval = () => {\n    setInterval(() => {\n      if (targetHit) {\n        p.redraw()\n        totalHits += 1\n        targetHit = false\n      }\n    }, 100)\n  }\n  ///\n  /// Show a message in the game map\n  ///\n  const msgDelivery = ({ msg, size, hexColor, leading, posX, posY }) => {\n    p.noStroke()\n    p.textAlign(p.CENTER, p.CENTER)\n    p.fill(hexColor)\n    p.textSize(size())\n    p.textFont(fontRegular)\n    p.textLeading(leading)\n    p.text(msg, posX, posY)\n  }\n\n  ///\n  /// Checks if the pointer hits a target\n  ///\n  p.mousePressed = () => {\n    if (gameRunning == true) {\n      if (\n        p.mouseX >= posX - diameter &&\n        p.mouseX <= posX + diameter &&\n        p.mouseY >= posY - diameter &&\n        p.mouseY <= posY + diameter\n      ) {\n        targetHit = true\n      }\n    }\n  }\n\n  ///\n  /// Draw a target\n  ///\n  p.draw = () => {\n    if (totalTargets >= 0 && gameRunning == true) {\n      if (!targetHit) {\n        loadMap()\n        posX = p.random(mapPosX + diameter / 2, mapWidth - diameter / 2)\n        posY = p.random(mapPosY + diameter / 2, mapHeight - diameter / 2)\n        p.strokeWeight(3)\n        p.stroke('#FF7272')\n        p.circle(posX, posY, diameter)\n      } else {\n        loadMap()\n        p.noStroke()\n        p.fill('#FF7272')\n        p.circle(posX, posY, diameter)\n      }\n    }\n  }\n}\n\nexport default aimTrainerSketch\n","import React from 'react'\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons'\n\nfunction AboutCard() {\n  return (\n    <Card\n      border=\"dark\"\n      style={{ width: '9rem' }}\n      className=\"bg-transparent text-black\"\n    >\n      <Card.Img src=\"https://avatars0.githubusercontent.com/u/18176548?s=460&v=4\" />\n      <Card.Body>\n        <Card.Title>Rocío</Card.Title>\n        <Card.Text>The author</Card.Text>\n        <Row xs={4} md={4} lg={6}>\n          <Col>\n            <a href=\"https://github.com/roocio\" target=\"_blank\">\n              <FontAwesomeIcon icon={faGithubAlt} />\n            </a>\n          </Col>\n          <Col>\n            <a href=\"https://www.linkedin.com/in/rociodc/\" target=\"_blank\">\n              <FontAwesomeIcon icon={faLinkedinIn} />\n            </a>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  )\n}\nexport default AboutCard\n","import React from 'react'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport AboutCard from './AboutCard'\n\nfunction AboutModal({ show, hide }) {\n  return (\n    <Modal\n      show={show}\n      onHide={hide}\n      aria-labelledby=\"large-centered-modal\"\n      centered\n      className=\"about-modal\"\n      animation={false}\n      size=\"lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title\n          id=\"large-centered-modal\"\n          className=\"font-weight-bold  text-monospace\"\n        >\n          <h1 className=\"font-weight-bold\">R4nd0m 5tuff ab0v3 a1l</h1>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row className=\"text-monospace\" xs={1} sm={1} md={2}>\n          <Col md={9}>\n            <div>\n              <p>\n                This page just shows random stuff, but most of all, things that\n                I enjoy develop, analyze, and learn. In the end there is only\n                one collection of everything that I personally like and makes me\n                have a while of fun and frustration.\n              </p>\n              <p>why not.</p>\n              <p>\n                On the page you will find data visualizations, some weird games,\n                generative images, among other things. A \"Repos\" section will be\n                available for the code.\n              </p>\n            </div>\n          </Col>\n          <Col\n            md=\"auto\"\n            lassName=\"d-flex justify-content-center align-self-center\"\n          >\n            <AboutCard />\n          </Col>\n        </Row>\n      </Modal.Body>\n    </Modal>\n  )\n}\nexport default AboutModal\n","import React, { useState, useRef } from 'react'\n\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport Nav from 'react-bootstrap/Nav'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons'\n\nfunction Contact({ linkText }) {\n  const [show, setShow] = useState(false)\n  const [target, setTarget] = useState(null)\n  const ref = useRef(null)\n  return (\n    <div\n      ref={ref}\n      onMouseEnter={() => setShow(true)}\n      onMouseLeave={() => setShow(false)}\n    >\n      <OverlayTrigger\n        placement=\"top\"\n        show={show}\n        onToggle={() => setShow(true)}\n        target={target}\n        overlay={\n          <Tooltip id=\"tooltip-top\">\n            <h6 className=\"text-monospace\">Hi there.</h6>\n            <Row xs={4} md={4} lg={6}>\n              <Col>\n                <a href=\"https://github.com/roocio\" target=\"_blank\">\n                  <FontAwesomeIcon icon={faGithubAlt} />\n                </a>\n              </Col>\n              <Col>\n                <a href=\"https://www.linkedin.com/in/rociodc/\" target=\"_blank\">\n                  <FontAwesomeIcon icon={faLinkedinIn} />\n                </a>\n              </Col>\n            </Row>\n          </Tooltip>\n        }\n      >\n        <Nav.Link\n          href=\"#\"\n          onClick={(event) => setTarget(event.target)}\n          onMouseEnter={(event) => setTarget(event.target)}\n        >\n          {linkText}\n        </Nav.Link>\n      </OverlayTrigger>\n    </div>\n  )\n}\n\nexport default Contact\n","import { useReducer } from 'react'\n\nconst useCollectorItemsReducer = () => {\n  const reducer = (state, action) => {\n    console.log(action)\n    switch (action.type) {\n      case 'select': {\n        return action.itemId\n      }\n      case 'close': {\n        return null\n      }\n    }\n  }\n  const [selectedItem, dispatchItemAction] = useReducer(reducer)\n\n  const selectCollectorItemAction = (event) => {\n    let itemId = event.target.id\n    dispatchItemAction({ type: 'select', itemId })\n  }\n\n  const closeCollectorItemAction = (event) => {\n    dispatchItemAction({ type: 'close' })\n  }\n\n  return {\n    selectedCollectorItem: selectedItem,\n    selectCollectorItemAction,\n    closeCollectorItemAction,\n  }\n}\n\nexport default useCollectorItemsReducer\n","import React from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\n\nimport useCollectorItemsReducer from '../../helpers/useCollectorItemsReducer'\n\nconst HeaderCancelBtn = ({ onCloseBtnClick }) => {\n  return (\n    <Button\n      variant=\"danger\"\n      className=\"text-monospace\"\n      onClick={onCloseBtnClick}\n    >\n      Close\n      <FontAwesomeIcon\n        icon={faWindowClose}\n        color=\"white\"\n        style={{ marginLeft: '0.5rem' }}\n      />\n    </Button>\n  )\n}\n\nexport default HeaderCancelBtn\n","import React, { useState } from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\n\nimport AboutModal from './about/AboutModal'\nimport Contact from './Contact'\nimport HeaderCancelBtn from './HeaderCancelBtn'\n\nimport useCollectorItemsReducer from '../../helpers/useCollectorItemsReducer'\n\nfunction Header({ onCloseBtnClick, onSelectBtnClick, selected }) {\n  const [showModal, setShowModal] = useState(false)\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" fixed=\"bottom\" className=\"ml-2 mr-2\">\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Nav>\n        <div>\n          {selected ? (\n            <HeaderCancelBtn onCloseBtnClick={onCloseBtnClick} />\n          ) : null}\n        </div>\n      </Nav>\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto text-monospace\">\n          <NavDropdown\n            title=\"Collector\"\n            id=\"collasible-nav-dropdown\"\n            drop=\"up\"\n            className=\"mr-2\"\n          >\n            <NavDropdown.Item\n              //as=\"button\"\n              href=\"#AIMTrainer\"\n              id=\"aimTrainer\"\n              onClick={onSelectBtnClick}\n            >\n              AIM Trainer\n            </NavDropdown.Item>\n            <NavDropdown.Item\n              href=\"#ToDo List\"\n              id=\"todoList\"\n              onClick={onSelectBtnClick}\n            >\n              Todo List\n            </NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Nav className=\"text-monospace\">\n          <Nav.Link href=\"#\" onClick={() => setShowModal(true)}>\n            About\n          </Nav.Link>\n          <Contact linkText={'Contact'} />\n        </Nav>\n\n        <AboutModal show={showModal} hide={() => setShowModal(false)} />\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\nexport default Header\n","import React, { useState, useRef, useEffect } from 'react'\nimport { object, string } from 'yup'\nimport { Formik } from 'formik'\nimport DatePicker from 'react-date-picker'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport 'react-date-picker/dist/DatePicker.css'\n\nfunction AddTaskForm({\n  onSubmitValues,\n  hide,\n  currentTaskName,\n  children = null,\n}) {\n  let yup = require('yup')\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n  })\n  const [datePicker, setDatePicker] = useState(new Date())\n  let maxDate = new Date()\n  maxDate.setMonth(maxDate.getMonth() + 6)\n\n  const textInput = useRef(null)\n  useEffect(() => {\n    textInput.current.focus()\n  }, [])\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={(values) => {\n        onSubmitValues(values.name, datePicker)\n      }}\n      initialValues={{\n        name: currentTaskName,\n        datePicker: datePicker,\n      }}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Row className=\"mb-3\">\n            <Col lg={6}>\n              <Form.Group controlId=\"validationFormikTask\">\n                <Form.Label>Task Name</Form.Label>\n                <Form.Control\n                  type=\"input\"\n                  name=\"name\"\n                  placeholder=\"Clean the house...\"\n                  value={values.name}\n                  onChange={handleChange}\n                  isInvalid={!!errors.name}\n                  ref={textInput}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  You must name your task\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n            <Col lg=\"auto\">\n              <Form.Group controlId=\"validationFormikTask\" className=\"mb-4\">\n                <Form.Label>Deadline</Form.Label>\n                <Col className=\"pl-0\">\n                  <DatePicker\n                    onChange={setDatePicker}\n                    value={datePicker}\n                    minDate={new Date()}\n                    maxDate={maxDate}\n                    minDetail=\"year\"\n                    calendarClassName=\"\"\n                    style={{\n                      height: '35px',\n                      paddingLeft: '10px',\n                      paddingRight: '10px',\n                    }}\n                  />\n                </Col>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Form.Row className=\"justify-content-end\">\n            {children ? (\n              children\n            ) : (\n              <Col xs=\"auto\">\n                <Button\n                  variant=\"secondary\"\n                  className=\"btn-icon-addTask\"\n                  style={{ width: '5rem' }}\n                  onClick={hide}\n                >\n                  Cancel\n                </Button>\n              </Col>\n            )}\n            <Col xs=\"auto\">\n              <Button\n                type=\"submit\"\n                className=\"btn-icon-addTask\"\n                style={{ width: '6rem' }}\n              >\n                Add\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      )}\n    </Formik>\n  )\n}\nexport default AddTaskForm\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport AddTaskForm from './AddTaskForm'\n\nconst AddTaskModal = ({ show, hide, onTaskAdd }) => {\n  return (\n    <Modal show={show} onHide={hide} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Add a new task</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <AddTaskForm\n          onSubmitValues={(name, deadline) => {\n            onTaskAdd({\n              id:\n                Math.random().toString(36).substring(2, 15) +\n                Math.random().toString(36).substring(2, 15),\n              task: name,\n              deadline: deadline,\n              taskCreationDate: new Date(),\n            })\n          }}\n          hide={hide}\n        />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default AddTaskModal\n","import React from 'react'\n\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Button from 'react-bootstrap/Button'\n\nimport AddTaskForm from './AddTaskForm'\n\nconst EditTaskCard = ({ item, onTaskEdited, hide }) => {\n  return (\n    <Card.Body>\n      <Col className=\"mb-3 pl-0\" style={{ color: '#4d4d4d' }}>\n        <strong>Task edit</strong>\n      </Col>\n      <AddTaskForm\n        onSubmitValues={(name, deadline) => {\n          onTaskEdited({\n            id: item.id,\n            task: name,\n            deadline: deadline,\n          })\n        }}\n        currentTaskName={item.task}\n      >\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey={item.id}>\n          Close\n        </Accordion.Toggle>\n      </AddTaskForm>\n    </Card.Body>\n  )\n}\nexport default EditTaskCard\n","import React, { useState, useReducer, useEffect } from 'react'\n\n// UI components import\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Image from 'react-bootstrap/Image'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Table from 'react-bootstrap/Table'\nimport Popover from 'react-bootstrap/Popover'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\n// icons import\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\n\n// images import\nimport imgEmptyList from '../../../assets/imgs/imgEmptyList.svg'\nimport imgAllDone from '../../../assets/imgs/imgAllDone.svg'\n\n// proyect components import\nimport AddTaskModal from './AddTaskModal'\nimport AddTaskForm from './AddTaskForm'\nimport EditTaskCard from './EditTaskCard'\n\n// moment library import\nimport moment from 'moment'\n\nconst listReducer = (state, { type, item }) => {\n  switch (type) {\n    case 'ADD_ITEM':\n      return [\n        ...state,\n        {\n          id: item.id,\n          task: item.task,\n          deadline: item.deadline,\n          ready: false,\n          taskCreationDate: item.taskCreationDate,\n        },\n      ]\n    case 'EMPTY_LIST':\n      return []\n    case 'SET_READY':\n      state.find((stateItem) => stateItem.id === item.id).ready = true\n      return [...state]\n\n    case 'EDIT_ITEM':\n      state.find((stateItem) => stateItem.id === item.id).task = item.task\n      state.find((stateItem) => stateItem.id === item.id).deadline =\n        item.deadline\n      return [...state]\n    default:\n      throw new Error()\n  }\n}\n\nfunction TodoList() {\n  // moment control\n  let momentDeadLine\n\n  // modal control\n  const [show, setShow] = useState(false)\n\n  // Accordion control\n  const [activeAccordion, setActiveAccordion] = useState(null)\n\n  // handle \"Add task\" btn\n  const handleAddTaskBtn = () => {\n    // reset progress bar when a new list is create\n    if (progressBarHandle.completed) {\n      dispatchList({ type: 'EMPTY_LIST' })\n    }\n    setShow(true)\n  }\n\n  // Task list control\n  const initialList = []\n  const [list, dispatchList] = useReducer(listReducer, initialList)\n\n  const handleAddTask = (item) => {\n    setShow(false)\n    setListControl({\n      ...listControl,\n      listTaskNotReady: listControl.listTaskNotReady + 1,\n    })\n    dispatchList({ type: 'ADD_ITEM', item })\n  }\n\n  const handleEditTask = (item) => {\n    dispatchList({ type: 'EDIT_ITEM', item })\n  }\n\n  const [progressBarHandle, setProgressBarAmount] = useState({\n    amount: 0,\n    completed: false,\n  })\n  const handleProgressBar = () => {\n    if (listControl.listTaskReady) {\n      let newAmount = (listControl.listTaskReady * 100) / list.length\n      let isCompleted = newAmount >= 100\n      if (isCompleted) {\n        setListControl({ ...listControl, allTaskReady: true })\n      }\n      setProgressBarAmount({\n        ...progressBarHandle,\n        amount: parseInt(newAmount),\n        completed: isCompleted,\n      })\n    }\n  }\n\n  const handleClickOnTaskReady = (item) => {\n    setListControl({\n      ...listControl,\n      listTaskNotReady: listControl.listTaskNotReady - 1,\n      listTaskReady: listControl.listTaskReady + 1,\n    })\n    dispatchList({ type: 'SET_READY', item: { id: item.id } })\n  }\n\n  // list control state\n  const [listControl, setListControl] = useState({\n    listTaskNotReady: 0,\n    listTaskReady: 0,\n    allTaskReady: false,\n    firstTimeList: true,\n  })\n\n  useEffect(() => {\n    if (listControl.allTaskReady) {\n      setListControl({\n        ...listControl,\n        listTaskNotReady: 0,\n        listTaskReady: 0,\n        allTaskReady: false,\n        firstTimeList: false,\n      })\n      setProgressBarAmount({ amount: 0, completed: false })\n    }\n    if (list.length) {\n      handleProgressBar()\n    }\n  }, [list])\n\n  const manageDeadlineShowed = (deadline) => {\n    return moment(deadline)\n      .hours(23)\n      .minutes(59)\n      .seconds(0)\n      .from(moment(), true)\n  }\n\n  return (\n    <div className=\"mb-5\">\n      <Card>\n        <Row className=\"pl-3 pr-3 mt-3 mb-3\">\n          <Col sm={8} style={{ color: '#4d4d4d' }}>\n            <h2>Todo list</h2>\n          </Col>\n          <Col sm={4} className=\"d-flex justify-content-end\">\n            <Button onClick={handleAddTaskBtn} className=\"btn-icon-addTask\">\n              <tet className=\"ml-2 mr-2\">Add task</tet>\n              <FontAwesomeIcon icon={faPlus} size=\"1x\" />\n            </Button>\n          </Col>\n        </Row>\n        <Row className=\"pl-3 pr-3 mb-3\">\n          <Col>\n            <text style={{ color: '#4d4d4d' }}>Completed:</text>\n            <ProgressBar\n              now={progressBarHandle.amount}\n              label={`${progressBarHandle.amount}%`}\n              className=\"mb-3\"\n            />\n            {!list.length ? (\n              <Row className=\"d-flex align-items-center\">\n                <Col\n                  xs={12}\n                  lg={{ span: 5, offset: 1 }}\n                  className=\"d-flex justify-content-center\"\n                >\n                  <span className=\"text-center\" style={{ color: '#6600cc' }}>\n                    <h2>You list is empty!</h2>\n                    <text>\n                      Start by adding some tasks in \"Add task\" section\n                    </text>\n                  </span>\n                </Col>\n                <Col\n                  xs={12}\n                  lg=\"auto\"\n                  className=\"d-flex justify-content-center\"\n                >\n                  <Image src={imgEmptyList} fluid />\n                </Col>\n              </Row>\n            ) : null}\n            {progressBarHandle.completed ? (\n              <Row className=\"d-flex align-items-center\">\n                <Col\n                  xs={12}\n                  lg={{ span: 4, offset: 1 }}\n                  className=\"d-flex justify-content-center\"\n                >\n                  <span className=\"text-center\" style={{ color: '#6600cc' }}>\n                    <h2>All done!</h2>\n                    <text>You are up to date. Take a well deserved rest</text>\n                  </span>\n                </Col>\n                <Col\n                  xs={12}\n                  lg=\"auto\"\n                  className=\"d-flex justify-content-center\"\n                >\n                  <Image src={imgAllDone} fluid />\n                </Col>\n              </Row>\n            ) : null}\n          </Col>\n        </Row>\n        <Row className=\"ml-1 mr-1 mb-5\">\n          <Col>\n            <Accordion fluid>\n              {listControl.listTaskNotReady\n                ? list\n                    .filter((item) => item.ready === false)\n                    .map((i) => (\n                      <Card style={{ overflow: 'visible' }}>\n                        <Card.Header>\n                          <Row className=\"d-flex align-items-center justify-content-between\">\n                            <Col xs={12} lg={8}>\n                              <span>\n                                <text\n                                  className=\"font-weight-bold\"\n                                  style={{ color: '#6600cc' }}\n                                >\n                                  {i.task}\n                                </text>\n                              </span>\n                            </Col>\n                            <Col\n                              lg=\"auto\"\n                              className=\"d-flex justify-content-end align-items-center mr-3\"\n                            >\n                              <Row>\n                                <OverlayTrigger\n                                  placement=\"top\"\n                                  key=\"deadline\"\n                                  overlay={\n                                    <Tooltip id=\"tooltip-top\">\n                                      <small style={{ color: '#6600cc' }}>\n                                        {i.deadline\n                                          ? i.deadline.toDateString()\n                                          : 'No estimated'}\n                                      </small>\n                                    </Tooltip>\n                                  }\n                                >\n                                  <small>\n                                    Deadline in:\n                                    <span\n                                      className=\"pl-1\"\n                                      style={{ color: '#6600cc' }}\n                                    >\n                                      {i.deadline\n                                        ? manageDeadlineShowed(i.deadline)\n                                        : 'No estimated'}\n                                    </span>\n                                  </small>\n                                </OverlayTrigger>\n                              </Row>\n                            </Col>\n                          </Row>\n                          <Row\n                            md=\"auto\"\n                            className=\"d-flex justify-content-end align-items-center\"\n                          >\n                            <Button\n                              onClick={() => {\n                                handleClickOnTaskReady(i)\n                              }}\n                              variant=\"link\"\n                            >\n                              <a className=\"btn-icon-taskReady\">\n                                <FontAwesomeIcon\n                                  icon={faCheckCircle}\n                                  size=\"1x\"\n                                />\n                              </a>\n                            </Button>\n                            <Accordion.Toggle\n                              as={Button}\n                              variant=\"link\"\n                              eventKey={i.id}\n                            >\n                              <a className=\"btn-icon-taskEdit\">\n                                <FontAwesomeIcon icon={faEdit} size=\"1x\" />\n                              </a>\n                            </Accordion.Toggle>\n                          </Row>\n                        </Card.Header>\n                        <Accordion.Collapse eventKey={i.id}>\n                          <EditTaskCard\n                            item={i}\n                            onTaskEdited={handleEditTask}\n                          />\n                        </Accordion.Collapse>\n                      </Card>\n                    ))\n                : null}\n            </Accordion>\n          </Col>\n        </Row>\n        {listControl.listTaskReady ? (\n          <Row className=\"p-3\">\n            <Col>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  {list\n                    .filter((item) => item.ready == true)\n                    .map((i) => (\n                      <ListGroup.Item style={{ backgroundColor: '#eafce8' }}>\n                        <Row className=\"d-flex align-items-center justify-content-between\">\n                          <Col xs lg={8} className=\"font-weight-bold\">\n                            <text style={{ color: '##737373' }}>{i.task}</text>\n                          </Col>\n                          <Col\n                            lg=\"auto\"\n                            className=\"d-flex justify-content-end align-items-center\"\n                          >\n                            <Row>\n                              <OverlayTrigger\n                                placement=\"top\"\n                                key=\"deadline-task-on-ready\"\n                                overlay={\n                                  <Tooltip id=\"tooltip-top\">\n                                    <small style={{ color: '#6600cc' }}>\n                                      Deadline was\n                                      <strong>\n                                        {i.deadline\n                                          ? i.deadline.toDateString()\n                                          : 'No estimated'}\n                                      </strong>\n                                    </small>\n                                  </Tooltip>\n                                }\n                              >\n                                <Row className=\"d-flex justify-content-end align-items-center mr-3\">\n                                  <span\n                                    style={{ color: '##737373' }}\n                                    className=\"mr-3 ml-3 font-weight-light\"\n                                  >\n                                    <small>\n                                      Completed in{' '}\n                                      <strong>\n                                        {moment(i.taskCreationDate).from(\n                                          moment(),\n                                          true,\n                                        )}\n                                      </strong>{' '}\n                                    </small>\n                                  </span>\n\n                                  <FontAwesomeIcon\n                                    icon={faCheckCircle}\n                                    size=\"1x\"\n                                    color=\"#81ee77\"\n                                  />\n                                </Row>\n                              </OverlayTrigger>\n                            </Row>\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        ) : null}\n        <AddTaskModal\n          show={show}\n          hide={() => setShow(false)}\n          onTaskAdd={handleAddTask}\n        />\n      </Card>\n      <Row className=\"justify-content-end mr-2\">\n        <OverlayTrigger\n          trigger=\"click\"\n          placement=\"top-end\"\n          overlay={\n            <Popover id=\"popover-img-credits\">\n              <Popover.Title>\n                <small>\n                  <strong>www.freepik.com</strong>\n                </small>\n              </Popover.Title>\n              <Popover.Content>\n                <a\n                  target=\"_blank\"\n                  href=\"https://www.freepik.com/vectors/background\"\n                  className=\"badge badge-pill badge-light\"\n                >\n                  Empty List\n                </a>\n\n                <a\n                  target=\"_blank\"\n                  href=\"https://www.freepik.com/vectors/home\"\n                  className=\"badge badge-pill badge-light\"\n                >\n                  All done\n                </a>\n              </Popover.Content>\n            </Popover>\n          }\n        >\n          <a href=\"#\">\n            <small style={{ color: '#737373' }} className=\"pt-0\">\n              Image credits\n            </small>\n          </a>\n        </OverlayTrigger>\n      </Row>\n    </div>\n  )\n}\n\nexport default TodoList\n","import React from 'react'\n\nimport P5Wrapper from 'react-p5-wrapper'\nimport aimTrainerSketch from './collectorThings/aimTrainer/aimTrainerSketch'\nimport TodoList from './collectorThings/todoList/TodoList'\n\nconst RenderOnSelect = ({ render }) => {\n  const selectRender = () => {\n    switch (render) {\n      case 'aimTrainer': {\n        return <P5Wrapper sketch={aimTrainerSketch} />\n      }\n      case 'todoList': {\n        return <TodoList />\n      }\n      default:\n        return null\n    }\n  }\n\n  return <div>{selectRender()}</div>\n}\n\nexport default RenderOnSelect\n","import React, { useState } from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nimport P5Wrapper from 'react-p5-wrapper'\nimport aimTrainerSketch from './collectorThings/aimTrainer/aimTrainerSketch'\n\nimport Header from './header/Header'\nimport TodoList from './collectorThings/todoList/TodoList'\nimport RenderOnSelect from './RenderOnSelect'\nimport useCollectorItemsReducer from '../helpers/useCollectorItemsReducer'\n\nfunction Home() {\n  const {\n    selectedCollectorItem,\n    selectCollectorItemAction,\n    closeCollectorItemAction,\n  } = useCollectorItemsReducer()\n\n  return (\n    <div>\n      <Row className=\"mt-5 ml-4 mb-3 mr-5 text-monospace\">\n        <Col>\n          <p>\n            <mark>The Collector of Things.</mark>\n            <p className=\"mt-2\">A page without a reason found yet</p>\n          </p>\n        </Col>\n      </Row>\n\n      <Container>\n        <RenderOnSelect render={selectedCollectorItem} />\n      </Container>\n\n      <Header\n        onCloseBtnClick={closeCollectorItemAction}\n        onSelectBtnClick={selectCollectorItemAction}\n        selected={selectedCollectorItem}\n      />\n    </div>\n  )\n}\nexport default Home\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}